
在 RaspberryPi 上编译 PyTorch

在 RaspberryPi 上编译 TensorFlow 之后，继续用 PyTorch 摧残 RaspberryPi。

安装依赖

sudo apt-get install libopenblas-dev cython3 libatlas-dev m4 libblas-dev
1
2
	
sudo apt-get install libopenblas-dev cython3 libatlas-dev m4 libblas-dev
 

设置环境变量

export NO_CUDA=1 # 反正不支持 Pi 上的 GPU
export NO_DISTRIBUTED=1 # 不需要分布式。能消除一个编译错误
1
2
3
	
export NO_CUDA=1 # 反正不支持 Pi 上的 GPU
export NO_DISTRIBUTED=1 # 不需要分布式。能消除一个编译错误
 

获取源代码

git clone --recursive https://github.com/pytorch/pytorch
1
2
	
git clone --recursive https://github.com/pytorch/pytorch
 

然后切换到一个已经发行的分支上（例如 v0.3.0）

git checkout -b v0.3.0
1
2
	
git checkout -b v0.3.0
 

编译和安装

编译：

python3 setup.py build
1
2
	
python3 setup.py build
 

直接安装：

sudo python3 setup.py install
1
2
	
sudo python3 setup.py install
 

生成 whl 包（去 dist 文件夹下收割结果）：

python3 setup.py bdist_wheel
1
2
	
python3 setup.py bdist_wheel
 

测试

import torch
a = torch.FloatTensor((2,2))
a.add_(3)
print (a)
1
2
3
4
5
	
import torch
a = torch.FloatTensor((2,2))
a.add_(3)
print (a)
 
 

qemu-system-arm -m 2048M -M vexpress-a15 -cpu cortex-a15 -kernel ./kernel-qemu-4.4.1-vexpress -dtb ./vexpress-v2p-ca15_a7.dtb -sd ../sda3/raspbian/2017-11-29-raspbian-stretch.img -append "root=/dev/mmcblk0p2 rootwait" -net nic -net user,hostfwd=tcp::5022-:22


python3.5/site-packages/torch/serialization.py:472:unpickler = pickle_module.Unpickler(f, encoding='utf8')


https://perso.aquilenet.fr/~sven337/english/2016/07/14/DIY-wifi-baby-monitor.html
https://github.com/hjltu/esp8266-wifi-microphone.git
https://github.com/benjaminzhao/ESP8266_AD7705_DEMO
https://www.esp8266.com/

